/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AppIndexRouteImport } from './routes/_app.index'
import { Route as AppSettingsRouteImport } from './routes/_app.settings'
import { Route as AppSearchRouteImport } from './routes/_app.search'
import { Route as AppNotificationsRouteImport } from './routes/_app.notifications'
import { Route as AppHashtagTagRouteImport } from './routes/_app.hashtag.$tag'
import { Route as AppProfileUsernameRouteRouteImport } from './routes/_app.profile.$username.route'
import { Route as AppProfileUsernameIndexRouteImport } from './routes/_app.profile.$username.index'
import { Route as AppProfileUsernamePostPostIdRouteImport } from './routes/_app.profile.$username.post.$postId'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)
const AppSearchRoute = AppSearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => AppRoute,
} as any)
const AppNotificationsRoute = AppNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => AppRoute,
} as any)
const AppHashtagTagRoute = AppHashtagTagRouteImport.update({
  id: '/hashtag/$tag',
  path: '/hashtag/$tag',
  getParentRoute: () => AppRoute,
} as any)
const AppProfileUsernameRouteRoute = AppProfileUsernameRouteRouteImport.update({
  id: '/profile/$username',
  path: '/profile/$username',
  getParentRoute: () => AppRoute,
} as any)
const AppProfileUsernameIndexRoute = AppProfileUsernameIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppProfileUsernameRouteRoute,
} as any)
const AppProfileUsernamePostPostIdRoute =
  AppProfileUsernamePostPostIdRouteImport.update({
    id: '/post/$postId',
    path: '/post/$postId',
    getParentRoute: () => AppProfileUsernameRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/notifications': typeof AppNotificationsRoute
  '/search': typeof AppSearchRoute
  '/settings': typeof AppSettingsRoute
  '/': typeof AppIndexRoute
  '/profile/$username': typeof AppProfileUsernameRouteRouteWithChildren
  '/hashtag/$tag': typeof AppHashtagTagRoute
  '/profile/$username/': typeof AppProfileUsernameIndexRoute
  '/profile/$username/post/$postId': typeof AppProfileUsernamePostPostIdRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/notifications': typeof AppNotificationsRoute
  '/search': typeof AppSearchRoute
  '/settings': typeof AppSettingsRoute
  '/': typeof AppIndexRoute
  '/hashtag/$tag': typeof AppHashtagTagRoute
  '/profile/$username': typeof AppProfileUsernameIndexRoute
  '/profile/$username/post/$postId': typeof AppProfileUsernamePostPostIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/_app/notifications': typeof AppNotificationsRoute
  '/_app/search': typeof AppSearchRoute
  '/_app/settings': typeof AppSettingsRoute
  '/_app/': typeof AppIndexRoute
  '/_app/profile/$username': typeof AppProfileUsernameRouteRouteWithChildren
  '/_app/hashtag/$tag': typeof AppHashtagTagRoute
  '/_app/profile/$username/': typeof AppProfileUsernameIndexRoute
  '/_app/profile/$username/post/$postId': typeof AppProfileUsernamePostPostIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/notifications'
    | '/search'
    | '/settings'
    | '/'
    | '/profile/$username'
    | '/hashtag/$tag'
    | '/profile/$username/'
    | '/profile/$username/post/$postId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/notifications'
    | '/search'
    | '/settings'
    | '/'
    | '/hashtag/$tag'
    | '/profile/$username'
    | '/profile/$username/post/$postId'
  id:
    | '__root__'
    | '/_app'
    | '/login'
    | '/_app/notifications'
    | '/_app/search'
    | '/_app/settings'
    | '/_app/'
    | '/_app/profile/$username'
    | '/_app/hashtag/$tag'
    | '/_app/profile/$username/'
    | '/_app/profile/$username/post/$postId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/search': {
      id: '/_app/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AppSearchRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/notifications': {
      id: '/_app/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof AppNotificationsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/hashtag/$tag': {
      id: '/_app/hashtag/$tag'
      path: '/hashtag/$tag'
      fullPath: '/hashtag/$tag'
      preLoaderRoute: typeof AppHashtagTagRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/profile/$username': {
      id: '/_app/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof AppProfileUsernameRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/profile/$username/': {
      id: '/_app/profile/$username/'
      path: '/'
      fullPath: '/profile/$username/'
      preLoaderRoute: typeof AppProfileUsernameIndexRouteImport
      parentRoute: typeof AppProfileUsernameRouteRoute
    }
    '/_app/profile/$username/post/$postId': {
      id: '/_app/profile/$username/post/$postId'
      path: '/post/$postId'
      fullPath: '/profile/$username/post/$postId'
      preLoaderRoute: typeof AppProfileUsernamePostPostIdRouteImport
      parentRoute: typeof AppProfileUsernameRouteRoute
    }
  }
}

interface AppProfileUsernameRouteRouteChildren {
  AppProfileUsernameIndexRoute: typeof AppProfileUsernameIndexRoute
  AppProfileUsernamePostPostIdRoute: typeof AppProfileUsernamePostPostIdRoute
}

const AppProfileUsernameRouteRouteChildren: AppProfileUsernameRouteRouteChildren =
  {
    AppProfileUsernameIndexRoute: AppProfileUsernameIndexRoute,
    AppProfileUsernamePostPostIdRoute: AppProfileUsernamePostPostIdRoute,
  }

const AppProfileUsernameRouteRouteWithChildren =
  AppProfileUsernameRouteRoute._addFileChildren(
    AppProfileUsernameRouteRouteChildren,
  )

interface AppRouteChildren {
  AppNotificationsRoute: typeof AppNotificationsRoute
  AppSearchRoute: typeof AppSearchRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppIndexRoute: typeof AppIndexRoute
  AppProfileUsernameRouteRoute: typeof AppProfileUsernameRouteRouteWithChildren
  AppHashtagTagRoute: typeof AppHashtagTagRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppNotificationsRoute: AppNotificationsRoute,
  AppSearchRoute: AppSearchRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppIndexRoute: AppIndexRoute,
  AppProfileUsernameRouteRoute: AppProfileUsernameRouteRouteWithChildren,
  AppHashtagTagRoute: AppHashtagTagRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
